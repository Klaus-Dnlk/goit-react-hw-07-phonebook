{"version":3,"sources":["App.module.scss","components/Styles.module.scss","redux/contacts/contacts-actions.js","redux/contacts/contacts-operations.js","redux/contacts/contacts-reducer.js","redux/store.js","redux/contacts/contacts-selectors.js","components/ContactForm.js","components/Filter.js","components/ContactList .js","App.js","index.js"],"names":["module","exports","changeFilter","createAction","axios","defaults","baseURL","fetchContacts","createAsyncThunk","_","a","rejectWithValue","get","contacts","addNewContact","name","number","post","data","deleteContact","contactId","delete","id","items","createReducer","operations","fulfilled","payload","state","find","e","toLowerCase","alert","filter","loading","pending","rejected","deletelContact","actions","error","combineReducers","store","configureStore","reducer","contactsReducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","concat","logger","devTools","process","getLoading","getFilter","getAllContacts","getVisibleContacts","allContacts","normalizedFilter","contact","includes","ContactForm","useState","setName","setNumber","useSelector","dispatch","useDispatch","uuidv4","phoneId","handleChange","target","value","reset","onSubmit","preventDefault","repeatName","ContactOperations","className","s","form","htmlFor","formLabel","type","pattern","title","required","inputWindow","onChange","btn","filterId","Filter","contactsSelectors","filterBox","filterLabel","filterInput","placeholder","ContactList","isLoading","useEffect","contactsOperations","length","contactList","map","listItem","onClick","App","section","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3b69d2ea.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"App_title__qZJjv\",\"section\":\"App_section__1L9NU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Styles_form__1n-MI\",\"formLabel\":\"Styles_formLabel__3EqA7\",\"inputWindow\":\"Styles_inputWindow__hvDpK\",\"filterBox\":\"Styles_filterBox__2XrpD\",\"filterInput\":\"Styles_filterInput__3ItDz\",\"contactList\":\"Styles_contactList__1lttY\",\"listItem\":\"Styles_listItem__rN4qw\",\"btn\":\"Styles_btn__1ntXU\"};","import { createAction } from '@reduxjs/toolkit';\n\nconst changeFilter = createAction('contacts/filter');\nexport default {\n  changeFilter,\n};\n","import axios from 'axios';\r\nimport { createAsyncThunk } from '@reduxjs/toolkit';\r\n\r\naxios.defaults.baseURL = 'http://localhost:4040';\r\n\r\nexport const fetchContacts = createAsyncThunk(\r\n  'contacts/fetchContacts',\r\n  async (_, { rejectWithValue }) => {\r\n    try {\r\n      const contacts = await axios.get('/contacts');\r\n      return contacts;\r\n    } catch (error) {\r\n      return rejectWithValue(error);\r\n    }\r\n  },\r\n);\r\n\r\nconst addNewContact = createAsyncThunk(\r\n  'contacts/addNewContact',\r\n  async ({ name, number }, { rejectWithValue }) => {\r\n    try {\r\n      const { data } = await axios.post('/contacts', { name, number });\r\n      return data;\r\n    } catch (error) {\r\n      rejectWithValue(error);\r\n    }\r\n  },\r\n);\r\n\r\nconst deleteContact = createAsyncThunk(\r\n  'contacts/delContact',\r\n  async (contactId, { rejectWithValue }) => {\r\n    try {\r\n      const { data } = await axios.delete(`/contacts/${contactId}`);\r\n      return data.id;\r\n    } catch (error) {\r\n      rejectWithValue(error);\r\n    }\r\n  },\r\n);\r\n\r\nexport default {\r\n  fetchContacts,\r\n  addNewContact,\r\n  deleteContact,\r\n};\r\n","import { createReducer, combineReducers } from '@reduxjs/toolkit';\nimport actions from './contacts-actions';\nimport operations from './contacts-operations';\n\nconst items = createReducer([], {\n  [operations.fetchContacts.fulfilled]: (_, { payload }) => payload,\n  [operations.addNewContact.fulfilled]: (state, { payload }) =>\n    state.find(e => e.name.toLowerCase() === payload.name.toLowerCase())\n      ? alert(`${payload.name} is already in contacts`)\n      : [...state, payload],\n  [operations.deleteContact.fulfilled]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst loading = createReducer(false, {\n  [operations.fetchContacts.pending]: () => true,\n  [operations.fetchContacts.fulfilled]: () => false,\n  [operations.fetchContacts.rejected]: () => false,\n  [operations.addNewContact.pending]: () => true,\n  [operations.addNewContact.fulfilled]: () => false,\n  [operations.addNewContact.rejected]: () => false,\n  [operations.deletelContact.pending]: () => true,\n  [operations.deletelContact.fulfilled]: () => false,\n  [operations.deletelContact.rejected]: () => false,\n});\n\nconst filter = createReducer('', {\n  [actions.changeFilter]: (_, { payload }) => payload,\n});\n\nconst error = createReducer(null, {});\n\nexport default combineReducers({\n  items,\n  filter,\n  loading,\n  error,\n});\n","import { configureStore } from '@reduxjs/toolkit';\nimport logger from 'redux-logger';\nimport {\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport contactsReducer from './contacts/contacts-reducer';\n\nconst store = configureStore({\n  reducer: {\n    contacts: contactsReducer,\n  },\n  middleware: getDefaultMiddleware =>\n    getDefaultMiddleware({\n      serializableCheck: {\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n      },\n    }).concat(logger),\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nexport default store;\n","export const getLoading = state => state.contacts.loading;\r\n\r\nexport const getFilter = state => state.contacts.filter;\r\n\r\nexport const getAllContacts = state => state.contacts.items;\r\n\r\nexport const getVisibleContacts = state => {\r\n  const allContacts = getAllContacts(state);\r\n  const filter = getFilter(state);\r\n  const normalizedFilter = filter.toLowerCase();\r\n\r\n  return allContacts.filter(contact =>\r\n    contact.name.toLowerCase().includes(normalizedFilter),\r\n  );\r\n};\r\n","import { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { v4 as uuidv4 } from 'uuid';\nimport ContactOperations from '../redux/contacts/contacts-operations';\nimport { getAllContacts } from '../redux/contacts/contacts-selectors';\nimport s from './Styles.module.scss';\n\nexport default function ContactForm() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const items = useSelector(getAllContacts);\n  const dispatch = useDispatch();\n  const contactId = uuidv4();\n  const phoneId = uuidv4();\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const repeatName = name =>\n      items.find(contact => contact.name.toLowerCase() === name.toLowerCase());\n\n    if (repeatName(name)) {\n      alert(`${name} is already in contacts`);\n    } else {\n      dispatch(ContactOperations.addNewContact({ name, number }));\n    }\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <div className={s.form}>\n        <label htmlFor={contactId} className={s.formLabel}>\n          Name\n          <input\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n            className={s.inputWindow}\n            value={name}\n            onChange={handleChange}\n            id={contactId}\n          />\n        </label>\n        <label htmlFor={phoneId} className={s.formLabel}>\n          Phone\n          <input\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n            className={s.inputWindow}\n            value={number}\n            onChange={handleChange}\n            id={phoneId}\n          />\n        </label>\n        <button type=\"submit\" title=\"Добавить контакт\" className={s.btn}>\n          Add contact\n        </button>\n      </div>\n    </form>\n  );\n}\n","import { useSelector, useDispatch } from 'react-redux';\nimport { contactsSelectors, changeFilter } from '../redux/contacts';\nimport { v4 as uuidv4 } from 'uuid';\nimport s from './Styles.module.scss';\n\nconst filterId = uuidv4();\n\nexport default function Filter() {\n  const value = useSelector(contactsSelectors.getFilter);\n  const dispatch = useDispatch();\n  return (\n    <div className={s.filterBox}>\n      <label htmlFor={filterId} className={s.filterLabel}>\n        <input\n          type=\"text\"\n          className={s.filterInput}\n          id={filterId}\n          placeholder=\"Find contacts by name\"\n          value={value}\n          onChange={e => dispatch(changeFilter(e.target.value))}\n        ></input>\n      </label>\n    </div>\n  );\n}\n","import { useSelector, useDispatch } from 'react-redux';\nimport { contactsOperations, contactsSelectors } from '../redux/contacts';\nimport s from './Styles.module.scss';\nimport { useEffect } from 'react';\n\nexport default function ContactList() {\n  const contacts = useSelector(contactsSelectors.getVisibleContacts);\n  const dispatch = useDispatch();\n  const isLoading = useSelector(contactsSelectors.getLoading);\n\n  useEffect(() => {\n    dispatch(contactsOperations.fetchContacts);\n  }, [dispatch]);\n\n  return (\n    <>\n      {isLoading && <h1>Loading...</h1>}\n      {contacts.length > 0 && (\n        <ul className={s.contactList}>\n          {contacts.map(({ id, name, number }) => (\n            <li key={id} className={s.listItem}>\n              <p>\n                {name}: {number}\n              </p>\n              <button\n                onClick={() => dispatch(contactsOperations.deleteContact(id))}\n                className={s.btn}\n                title=\"Удалить контакт\"\n              >\n                Delete\n              </button>\n            </li>\n          ))}\n        </ul>\n      )}\n    </>\n  );\n}\n","import s from './App.module.scss';\nimport ContactForm from './components/ContactForm';\nimport Filter from './components/Filter';\nimport ContactList from './components/ContactList ';\n\nexport default function App() {\n  return (\n    <div className={s.section}>\n      <h2 className={s.title}>Phonebook</h2>\n      <ContactForm />\n      <h2 className={s.title}>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\n// import { PersistGate } from 'redux-persist/integration/react';\nimport store from './redux/store';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      {/* <PersistGate loading={null} persistor={store.persistor}> */}\n      {/* <BrowserRouter> */}\n      <App />\n      {/* </BrowserRouter> */}\n      {/* </PersistGate> */}\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}