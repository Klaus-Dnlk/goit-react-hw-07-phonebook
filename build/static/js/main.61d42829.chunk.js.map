{"version":3,"sources":["App.module.scss","components/Styles.module.scss","redux/contacts/contacts-actions.js","redux/contacts/contacts-reducer.js","redux/store.js","redux/contacts/contacts-operations.js","components/ContactForm.js","redux/contacts/contacts-selectors.js","components/Filter.js","components/ContactList .js","App.js","index.js"],"names":["module","exports","fetchContactRequest","createAction","fetchContactSuccess","fetchContactError","addContactRequest","addContactSuccess","addContactError","delContactRequest","delContactSuccess","delContactError","changeFilter","items","createReducer","_","payload","state","find","e","name","toLowerCase","alert","filter","id","loading","error","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","contacts","contactsReducer","devTools","process","axios","defaults","baseURL","text","dispatch","contact","completed","post","then","data","catch","contactId","delete","connect","newContact","number","ContactOperations","useState","setName","setNumber","uuidv4","phoneId","handleChange","target","value","reset","onSubmit","preventDefault","className","s","form","htmlFor","formLabel","type","pattern","title","required","inputWindow","onChange","btn","getFilter","allContacts","getAllContacts","normalizedFilter","includes","filterId","contactsSelectors","contactsActions","filterBox","filterLabel","filterInput","placeholder","deleteContact","contactOperations","isLoading","useSelector","contactList","map","listItem","onClick","App","section","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.61d42829.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"App_title__qZJjv\",\"section\":\"App_section__1L9NU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Styles_form__1n-MI\",\"formLabel\":\"Styles_formLabel__3EqA7\",\"inputWindow\":\"Styles_inputWindow__hvDpK\",\"filterBox\":\"Styles_filterBox__2XrpD\",\"filterInput\":\"Styles_filterInput__3ItDz\",\"contactList\":\"Styles_contactList__1lttY\",\"listItem\":\"Styles_listItem__rN4qw\",\"btn\":\"Styles_btn__1ntXU\"};","import { createAction } from '@reduxjs/toolkit';\n\nexport const fetchContactRequest = createAction('contacts/fetchContactRequest');\nexport const fetchContactSuccess = createAction('contacts/fetchContactSeccess');\nexport const fetchContactError = createAction('contacts/fetchContactError');\n\nexport const addContactRequest = createAction('contacts/addContactRequest');\nexport const addContactSuccess = createAction('contacts/addContactSeccess');\nexport const addContactError = createAction('contacts/addContactError');\n\nexport const delContactRequest = createAction('contacts/delRequest');\nexport const delContactSuccess = createAction('contacts/delSeccess');\nexport const delContactError = createAction('contacts/delError');\n\nexport const changeFilter = createAction('contacts/filter');\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport {\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  delContactRequest,\n  delContactSuccess,\n  delContactError,\n  changeFilter,\n  fetchContactRequest,\n  fetchContactSuccess,\n  fetchContactError,\n} from './contacts-actions';\n\nconst items = createReducer(\n  [],\n\n  {\n    [fetchContactSuccess]: (_, { payload }) => payload,\n    [addContactSuccess]: (state, { payload }) =>\n      state.find(e => e.name.toLowerCase() === payload.name.toLowerCase())\n        ? alert(`${payload.name} is already in contacts`)\n        : [...state, payload],\n    [delContactSuccess]: (state, { payload }) =>\n      state.filter(({ id }) => id !== payload),\n  },\n);\n\nconst loading = createReducer(false, {\n  [fetchContactRequest]: () => true,\n  [fetchContactSuccess]: () => false,\n  [fetchContactError]: () => false,\n  [addContactRequest]: () => true,\n  [addContactSuccess]: () => false,\n  [addContactError]: () => false,\n  [delContactRequest]: () => true,\n  [delContactSuccess]: () => false,\n  [delContactError]: () => false,\n});\n\nconst filter = createReducer('', {\n  [changeFilter]: (_, { payload }) => payload,\n});\n\nconst error = createReducer(null, {});\n\nexport default combineReducers({\n  items,\n  filter,\n  loading,\n  error,\n});\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport logger from 'redux-logger';\nimport {\n  // persistStore,\n  // persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport contactsReducer from './contacts/contacts-reducer';\n// import storage from 'redux-persist/lib/storage';\n\nconst myMiddleware = store => next => action => {\n  console.log('My middleware', action);\n\n  next(action);\n};\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  logger,\n];\n\n// const contactsConfig = {\n//   key: 'contacts',\n//   storage,\n//   blacklist: ['filter'],\n// };\n\nconst store = configureStore({\n  reducer: {\n    // contacts: persistReducer(contactsConfig, contactsReducer)\n    contacts: contactsReducer,\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\n// const persistor = persistStore(store);\n\nexport default store;\n","import axios from 'axios';\r\nimport {\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  delContactRequest,\r\n  delContactSuccess,\r\n  delContactError,\r\n  fetchContactRequest,\r\n  fetchContactSuccess,\r\n  fetchContactError,\r\n} from './contacts-actions';\r\n\r\naxios.defaults.baseURL = 'http://localhost:4040';\r\n\r\nconst fetchContacts = () => dispatch => {\r\n  dispatch(fetchContactRequest());\r\n\r\n  axios\r\n    .get('/contacts')\r\n    .then(({ data }) => dispatch(fetchContactSuccess(data)))\r\n    .catch(error => dispatch(fetchContactError(error)));\r\n};\r\n\r\nconst addNewContact = text => dispatch => {\r\n  const contact = {\r\n    text,\r\n    completed: false,\r\n  };\r\n\r\n  dispatch(addContactRequest());\r\n\r\n  axios\r\n    .post('/contacts', contact)\r\n    .then(({ data }) => dispatch(addContactSuccess(data)))\r\n    .catch(error => dispatch(addContactError(error)));\r\n};\r\n\r\nconst deleteContact = contactId => dispatch => {\r\n  dispatch(delContactRequest());\r\n\r\n  axios\r\n    .delete(`/contacts/${contactId}`)\r\n    .then(() => dispatch(delContactSuccess(contactId)))\r\n    .catch(error => dispatch(delContactError(error)));\r\n};\r\n\r\nexport default {\r\n  fetchContacts,\r\n  addNewContact,\r\n  deleteContact,\r\n};\r\n","import { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { v4 as uuidv4 } from 'uuid';\nimport ContactOperations from '../redux/contacts/contacts-operations';\nimport s from './Styles.module.scss';\n\nfunction ContactForm({ newContact }) {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const contactId = uuidv4();\n  const phoneId = uuidv4();\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    newContact(name, number);\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <div className={s.form}>\n        <label htmlFor={contactId} className={s.formLabel}>\n          Name\n          <input\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n            className={s.inputWindow}\n            value={name}\n            onChange={handleChange}\n            id={contactId}\n          />\n        </label>\n        <label htmlFor={phoneId} className={s.formLabel}>\n          Phone\n          <input\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n            className={s.inputWindow}\n            value={number}\n            onChange={handleChange}\n            id={phoneId}\n          />\n        </label>\n        <button type=\"submit\" title=\"Добавить контакт\" className={s.btn}>\n          Add contact\n        </button>\n      </div>\n    </form>\n  );\n}\n\nconst mapStateToProps = state => ({\n  items: state.contacts.items,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  newContact: (name, number) =>\n    dispatch(ContactOperations.addNewContact(name, number)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\n","const getLoading = state => state.contacts.loading;\r\n\r\nconst getFilter = state => state.contacts.filter;\r\n\r\nconst getAllContacts = state => state.contacts.items;\r\n\r\nconst getVisibleContacts = state => {\r\n  const allContacts = getAllContacts(state);\r\n  const filter = getFilter(state);\r\n  const normalizedFilter = filter.toLowerCase();\r\n\r\n  return allContacts.filter(contact =>\r\n    contact.name.toLowerCase().includes(normalizedFilter),\r\n  );\r\n};\r\n\r\nexport default {\r\n  getLoading,\r\n  getFilter,\r\n  getVisibleContacts,\r\n};\r\n","import PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport * as contactsActions from '../redux/contacts/contacts-actions';\nimport { v4 as uuidv4 } from 'uuid';\nimport s from './Styles.module.scss';\nimport contactsSelectors from '../redux/contacts/contacts-selectors';\n\nconst filterId = uuidv4();\n\nfunction Filter({ value, onChange }) {\n  return (\n    <div className={s.filterBox}>\n      <label htmlFor={filterId} className={s.filterLabel}>\n        <input\n          type=\"text\"\n          className={s.filterInput}\n          id={filterId}\n          placeholder=\"Find contacts by name\"\n          value={value}\n          onChange={onChange}\n        ></input>\n      </label>\n    </div>\n  );\n}\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n};\n\nconst mapStateToProps = state => ({\n  value: contactsSelectors.getFilter(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onChange: e => dispatch(contactsActions.changeFilter(e.target.value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import PropTypes from 'prop-types';\nimport { connect, useSelector } from 'react-redux';\nimport contactOperations from '../redux/contacts/contacts-operations';\nimport s from './Styles.module.scss';\nimport contactsSelectors from '../redux/contacts/contacts-selectors';\n\nfunction ContactList({ contacts, deleteContact }) {\n  const isLoading = useSelector(contactsSelectors.getLoading);\n  return (\n    <>\n      {isLoading && <h1>Loading...</h1>}\n      <ul className={s.contactList}>\n        {contacts.map(({ id, name, number }) => (\n          <li key={id} className={s.listItem}>\n            <p>\n              {name}: {number}\n            </p>\n            <button\n              onClick={() => deleteContact(id)}\n              className={s.btn}\n              title=\"Удалить контакт\"\n            >\n              Delete\n            </button>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n}\n\nContactList.propTypes = {\n  contacts: PropTypes.array,\n  deleteContact: PropTypes.func,\n};\n\nconst mapStateToProps = state => ({\n  contacts: contactsSelectors.getVisibleContacts(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  deleteContact: id => dispatch(contactOperations.deleteContact(id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n","import s from './App.module.scss';\nimport ContactForm from './components/ContactForm';\nimport Filter from './components/Filter';\nimport ContactList from './components/ContactList ';\n\nexport default function App() {\n  return (\n    <div className={s.section}>\n      <h2 className={s.title}>Phonebook</h2>\n      <ContactForm />\n      <h2 className={s.title}>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\n// import { PersistGate } from 'redux-persist/integration/react';\nimport store from './redux/store';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      {/* <PersistGate loading={null} persistor={store.persistor}> */}\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n      {/* </PersistGate> */}\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}